{"ast":null,"code":"var _jsxFileName = \"/home/magneto/software/learning/university/fullstackopen/part2/phonebook/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport phService from './services/phonebook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Notification = ({\n  message,\n  type\n}) => {\n  console.log(\"Call to Notification\");\n\n  if (message === null || type === null) {\n    console.log(\"Returning null, params: \", message, type);\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: type,\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Notification;\n\nconst Filter = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [\"filter shown with \", /*#__PURE__*/_jsxDEV(\"input\", {\n    value: props.search,\n    onChange: props.handler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 50\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 27\n}, this);\n\n_c2 = Filter;\n\nconst PersonForm = props => /*#__PURE__*/_jsxDEV(\"form\", {\n  onSubmit: props.addPerson,\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.newName,\n      onChange: props.handleNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.newNumber,\n      onChange: props.handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 3\n}, this);\n\n_c3 = PersonForm;\n\nconst Person = ({\n  person,\n  deleteEntry\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [`${person.name} ${person.number}`, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteEntry(person.id),\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 43\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 106\n    }, this)]\n  }, void 0, true);\n};\n\n_c4 = Person;\n\nconst Persons = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: props.persons.map(person => /*#__PURE__*/_jsxDEV(Person, {\n    person: person,\n    deleteEntry: props.deleteEntry\n  }, person.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 35\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 3\n}, this);\n\n_c5 = Persons;\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setNewSearch] = useState('');\n  const TYPE = {\n    ERROR: \"error\",\n    SUCCESS: \"success\"\n  };\n  const [notification, setNotification] = useState({\n    message: null,\n    type: TYPE.ERROR\n  });\n\n  const updateNotification = (message, type) => {\n    setNotification({\n      message: message,\n      type: type\n    });\n    setTimeout(() => {\n      setNotification({\n        message: null,\n        type: null\n      });\n    }, 5000);\n  };\n\n  useEffect(() => {\n    phService.getAll().then(phonebook => setPersons(phonebook)).catch(error => {\n      updateNotification(\"Unable to fetch phonebook from the server. Please refresh the page and try again!\", TYPE.ERROR);\n    });\n  }, []);\n\n  const addPerson = event => {\n    event.preventDefault(); // prevents default form behaviour which is to submit a post request\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    };\n\n    if (persons.map(person => person.name).includes(newPerson.name)) {\n      if (persons.map(person => person.number).includes(newPerson.number)) {\n        updateNotification(`The entry ${newName} ${newNumber} is already added to the phonebook`, TYPE.ERROR);\n      } else {\n        const confirmed = window.confirm(`Update phone number for entry '${newPerson.name} to ${newPerson.number}'?`);\n\n        if (confirmed) {\n          phService.update(persons.find(person => person.name === newPerson.name).id, newPerson).then(returnedPerson => {\n            setPersons(persons.map(person => person.name === newPerson.name ? returnedPerson : person));\n            setNewName('');\n            setNewNumber('');\n            updateNotification(`Successfully updated phone number for entry '${newPerson.name}' to '${newPerson.number}'!`, TYPE.SUCCESS);\n          }).catch(error => {\n            updateNotification(`Error updating the number for the entry '${newPerson.name}' to the phonebook.\n                                The entry was probably deleted from the server. Please refresh the page and try again!`, TYPE.ERROR);\n          });\n        }\n      }\n    } else {\n      phService.create(newPerson).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n        updateNotification(`Successfully created entry '${newPerson.name} ${newPerson.number}'!`, TYPE.SUCCESS);\n      }).catch(error => {\n        updateNotification(`Error submitting the new entry: ${newPerson.name} ${newPerson.number} to the phonebook. Please try again!`, TYPE.ERROR);\n      });\n    }\n  };\n\n  const deleteEntry = id => {\n    const personToDel = persons.find(person => person.id === id);\n    const confirmed = window.confirm(`Delete entry ${personToDel.name} ${personToDel.number}?`);\n\n    if (!confirmed) {\n      updateNotification(`the deletion of entry ${personToDel.name} ${personToDel.number} was cancelled`, TYPE.SUCCESS);\n    } else {\n      phService.deleteEntry(id).then(response => {\n        console.log(response);\n        setPersons(persons.filter(person => person.id !== personToDel.id));\n        updateNotification(`Successfully deleted entry ${personToDel.name} ${personToDel.number}`, TYPE.SUCCESS);\n      }).catch(error => {\n        updateNotification(`Unable to delete entry ${personToDel.name} ${personToDel.number} from the server. Please try again!`, TYPE.ERROR);\n      });\n    }\n  };\n\n  const personsToShow = search => search === '' ? persons : persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()));\n\n  const updateSearch = event => {\n    setNewSearch(event.target.value);\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      message: notification.message,\n      type: notification.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      search: search,\n      handler: updateSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"add a new entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      addPerson: addPerson,\n      newName: newName,\n      newNumber: newNumber,\n      handleNameChange: handleNameChange,\n      handleNumberChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Persons, {\n      persons: personsToShow(search),\n      deleteEntry: deleteEntry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"JKHqwux3YrDrhgeIG/fL9B1GBzg=\");\n\n_c6 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"Filter\");\n$RefreshReg$(_c3, \"PersonForm\");\n$RefreshReg$(_c4, \"Person\");\n$RefreshReg$(_c5, \"Persons\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"sources":["/home/magneto/software/learning/university/fullstackopen/part2/phonebook/src/App.js"],"names":["React","useEffect","useState","phService","Notification","message","type","console","log","Filter","props","search","handler","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","Person","person","deleteEntry","name","number","id","Persons","persons","map","App","setPersons","setNewName","setNewNumber","setNewSearch","TYPE","ERROR","SUCCESS","notification","setNotification","updateNotification","setTimeout","getAll","then","phonebook","catch","error","event","preventDefault","newPerson","includes","confirmed","window","confirm","update","find","returnedPerson","create","concat","personToDel","response","filter","personsToShow","toLowerCase","updateSearch","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport phService from './services/phonebook'\n\nconst Notification = ({message, type}) => {\n  console.log(\"Call to Notification\")\n\n  if(message === null || type === null) {\n    console.log(\"Returning null, params: \", message, type)\n    return null\n  }\n\n  return(\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nconst Filter = (props) => <div>filter shown with <input value={props.search} onChange={props.handler}/></div>\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.addPerson}>\n    <div>\n      name: <input value={props.newName} onChange={props.handleNameChange}/>\n    </div>\n    <div>\n      number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst Person = ( {person, deleteEntry} ) => {\n  \n  return (\n    <>\n      {`${person.name} ${person.number}`} <button onClick={() => deleteEntry(person.id)}>delete</button> <br />\n    </>\n  )\n}\n\nconst Persons = (props) => (\n  <div>\n    {props.persons.map( person => <Person key={person.id} person={person} deleteEntry={props.deleteEntry}/>)}\n  </div>\n)\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ search, setNewSearch ] = useState('')\n\n  const TYPE = {\n    ERROR: \"error\",\n    SUCCESS: \"success\"\n  }\n  const [ notification, setNotification ] = useState( {message: null, type: TYPE.ERROR})\n\n  const updateNotification = (message, type) => {\n    setNotification( {message: message, type: type} )\n    setTimeout( () => { setNotification( {message: null, type: null} ) }, 5000)\n  }\n\n  useEffect( () => {\n    phService\n      .getAll()\n      .then( phonebook => setPersons( phonebook ) )\n      .catch( error => { updateNotification(\"Unable to fetch phonebook from the server. Please refresh the page and try again!\", TYPE.ERROR) } ) \n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault() // prevents default form behaviour which is to submit a post request\n\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if ( persons.map( person => person.name ).includes(newPerson.name) ) {\n      if ( persons.map( person => person.number).includes(newPerson.number) ){\n        updateNotification(`The entry ${newName} ${newNumber} is already added to the phonebook`, TYPE.ERROR )\n      } else {\n        const confirmed = window.confirm(`Update phone number for entry '${newPerson.name} to ${newPerson.number}'?`)\n        if (confirmed) {\n          phService\n          .update( persons.find( person => person.name === newPerson.name).id, newPerson )\n          .then( returnedPerson => {\n            setPersons(persons.map( person => person.name === newPerson.name ? returnedPerson : person ))\n            setNewName('')\n            setNewNumber('')\n            updateNotification(`Successfully updated phone number for entry '${newPerson.name}' to '${newPerson.number}'!`, TYPE.SUCCESS)\n          } )\n          .catch( error => {\n            updateNotification(`Error updating the number for the entry '${newPerson.name}' to the phonebook.\n                                The entry was probably deleted from the server. Please refresh the page and try again!`, TYPE.ERROR)\n          })\n        }\n      }\n      \n    } else {\n\n      phService\n        .create(newPerson)\n        .then( returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          updateNotification(`Successfully created entry '${newPerson.name} ${newPerson.number}'!`, TYPE.SUCCESS)\n        } )\n        .catch( error => {\n          updateNotification(`Error submitting the new entry: ${newPerson.name} ${newPerson.number} to the phonebook. Please try again!`, TYPE.ERROR)\n        })\n    }\n  }\n\n  const deleteEntry = (id) => {\n    const personToDel = persons.find( person => person.id === id)\n    const confirmed = window.confirm(`Delete entry ${personToDel.name} ${personToDel.number}?`)\n    \n    if(!confirmed) { \n      updateNotification(`the deletion of entry ${personToDel.name} ${personToDel.number} was cancelled`, TYPE.SUCCESS)\n    } else {\n      phService\n      .deleteEntry(id)\n      .then( response => {\n          console.log(response)\n          setPersons( persons.filter( person => person.id !== personToDel.id ) )\n          updateNotification(`Successfully deleted entry ${personToDel.name} ${personToDel.number}`, TYPE.SUCCESS)\n        }\n      ).catch( error => {\n          updateNotification(`Unable to delete entry ${personToDel.name} ${personToDel.number} from the server. Please try again!`, TYPE.ERROR)\n      })\n    }\n  }\n\n  const personsToShow = ( search ) => search === ''\n    ? persons\n    : persons.filter( person => person.name.toLowerCase().includes( search.toLowerCase() ))\n\n\n  const updateSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  return (\n    <div>\n      <Notification message={notification.message} type={notification.type}/>\n      <h2>Phonebook</h2>\n      <Filter search={search} handler={updateSearch}/>\n      <h3>add a new entry</h3>\n      <PersonForm addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow(search)} deleteEntry={deleteEntry}/>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}